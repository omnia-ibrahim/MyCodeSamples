<?php

define(YEBAB_ALBUMS_SHOP_VID, 'yebab_albums_vid');
define(YEBAB_ALBUMS_SHOP_TYPE , 'yebab_shop');
define(YEBAB_ALBUMS_USERALBUM_TYPE , 'yebab_user_album');
define(YEBAB_ALBUMS_HOME_SHOPS_COUNT, 12);
define(YEBAB_ALBUMS_COLUMNS_COUNT, 4);
define(YEBAB_ALBUMS_HOME_COLUMNS_COUNT, 5);

/**
 Implementation of hook_menu();
 */
function yebab_albums_menu() {

  $items = array();

  $items['node/%node/images'] = array(
    'title' => 'Images list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yebab_albums_images_privacy_page', 1),
    'access callback' => 'yebab_albums_images_privacy_access',
    'access arguments' => array(1),
    'weight' => 5,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/albums'] = array(
    'title' => 'Yebab Album Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yebab_albums_settings_page'),
    'access callback' => 'user_access', 
    'access arguments' => array('administer yebab albums'),
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

/**
 *
 */
function yebab_albums_images_privacy_page(&$form_state, $node) {
  $form = array();
  $form['rows'] = array('#theme' => 'albums_privacy_page', '#tree' => TRUE);  
  $images = db_query("SELECT inid, visible FROM {yebab_shop_images} WHERE snid = %d", $node->nid);

  while ($row = db_fetch_object($images)) {
    $image = node_load($row->inid);
    $image->is_visible = $row->visible;
    $node_images[] = $image;
  }
  if (count($node_images)) {
    foreach ($node_images as $key => $image) {
      $form['rows'][$image->nid]['title'] = array(
        '#type' => 'markup',
        '#value' => $image->title,
      );
      $form['rows'][$image->nid]['thumb'] = array(
        '#type' => 'markup',
        '#value' => '<a rel="lightbox" href="'. url($image->images['_original']) .'">'. theme('imagecache', 'yebab_thumb', $image->images['_original'], $image->title, $image->title).'</a>',
      );
      $form['rows'][$image->nid]['visible'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display'),
        '#return_value' => $image->is_visible,
        '#default_value' => $image->is_visible,
      );
    }
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  $form['nid'] = array(
    '#type' => 'value',
    '#value' => $node->nid,
  );
  return $form;  
}

/**
 *
 */
function theme_albums_privacy_page($form) {
  $header = array(t('#'), t('Thumb'), t('Name'));  
  $rows = array();
  foreach (element_children($form) as $key) {
    $row = array();
    $row[] = drupal_render($form[$key]['visible']);
    $row[] = drupal_render($form[$key]['thumb']);
    $row[] = drupal_render($form[$key]['title']);
    $rows[] = $row;
  }
  $output = theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;  
}

/**
 *
 */
function yebab_albums_images_privacy_page_submit($form, &$form_state) {

  db_query("DELETE FROM {yebab_shop_images} WHERE snid = %d", $form_state['values']['nid']);
  foreach ($form_state['values']['rows'] as $inid => $img) {
    db_query("INSERT INTO {yebab_shop_images} (snid, inid, visible) VALUES (%d, %d, %d)", $form_state['values']['nid'], $inid, (int) $img['visible']);
  }
  drupal_set_message('Images Updated');
}

/**
 *
 */
function yebab_albums_images_privacy_access($node) {

  if ($node->type == YEBAB_ALBUMS_SHOP_TYPE && (user_access('administer yebab albums') || $node->uid == $user->uid)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implementaion of hook_access()
 */
function yebab_albums_access($op, $node, $account) {
 
  switch ($op) {
    case 'create':
      //  return user_access('create ' . (is_object($node) ? $node->type : $node) . ' content', $account);
      return user_access('create Yebab User Album content');
    case 'update':
      return user_access('edit any Yebab User Album content') || ( ($node->uid == $account->uid) && user_access('edit own Yebab User Album content'));
    case 'delete':
      return user_access('delete any Yebab User Album content') || ( ($node->uid == $account->uid) && user_access('delete own Yebab User Album content'));
    case 'view':
      if ($node->album_status == 1) {
        if ($account->uid == $node->uid || in_array($account->uid, $node->boards_viewers)) {
          return user_access('access content');
        }
        else {
         return false; 
       }
      } else {
        return user_access('access content');
    }
  }
}

/**
 Implementation of hook_perm()
 */
function yebab_albums_perm() {
  return array(
    'create Yebab User Album content',
    'delete own Yebab User Album content',
    'delete any Yebab User Album content',
    'edit own Yebab User Album content',
    'edit any Yebab User Album content',
    'access yebab albums',
    'administer yebab albums',
  );  
}

/**
 *
 */
function yebab_albums_node_info() {
  return array(
    'yebab_user_album' => array(
      'name' => t('Yebab User Album'),
      'description' => t('Yebab User Album node type.'),
      'module' => 'yebab_albums',
      'title_label'   => t('Album Name'),
      'body_label'    => t('Description'),
  ));
}

/**
 * Implemenatation of hook_form()
 */
function yebab_albums_form(&$node) {
  global $language;
  global $user;
  $type = node_get_types('type', $node);

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#required' => TRUE,
    '#default_value' => $node->title,
    '#weight' => -60,
  );
  if ($type->has_body) {
    $form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
    $form['body_field']['#weight'] = 10; 
    $form['body_field']['body']['#rows'] = 1; 
    $form['body_field']['body']['#prefix'] = "<div class='album-description-body-field'>"; 
    $form['body_field']['body']['#suffix'] = "</div>"; 
  }  
  if ($language->language == 'ar') {
    $t_public = t('يمكن للجميع مشاهدة الألبوم');
    $t_private = t('ألبوم خاص و لا يعرض لأحد');
  }
  else {
    $t_public = t('Everyone can view this Album');
    $t_private = t('Private album, not viewed to public');
  }
  $form['album_status'] = array(
    '#type' => 'radios',
    '#title' => t('Album Type'),
    '#description' => t('Public') . " : " . $t_public . ', ' . t('Private').  ' : ' . $t_private,
    '#options' => array(0 => t('Public'), 1 => t('Private')),
    '#default_value' => (isset($node->album_status) ? $node->album_status : 0), 
    '#prefix' => "<div class='pinterest_board_status'>",
    '#suffix' => "</div>",
  );
  // Viewers case private album
  $following_array = array(t('No one'));
  $following_users = db_query("SELECT follower_uid as uid, name FROM {pinterest_users_followers} INNER JOIN {users} ON follower_uid = uid WHERE followed_uid = %d AND follow = 1", $user->uid);
  while ($following = db_fetch_object($following_users)) {
    $following_array[$following->uid] = $following->name;
  }   

  $form['boards_viewers'] = array(
    '#type' => 'select',
    '#title' => t('Who can view the album'),
    '#options' => $following_array,
    '#weight' => 5,
    '#default_value'=> $node->boards_viewers,
    '#multiple' => true,
  );  
  if (!empty($node->nid)) {
    $form['board_delete'] = array(
      '#type' => 'submit',
      '#weight' => 1000,
      '#value' => t('Delete board'),
      '#submit' => array('yebab_pinterest_board_edit_form_submit'),
    );
  }
  $album_business = 0;
  $store_owner = db_result(db_query("SELECT store_nid FROM {yebab_users_info} WHERE uid = %d", $user->uid));
  if (is_numeric($store_owner) && $store_owner != 0) {
    $xx = 1;
  }
  $shop_nid = arg(3); 
  if (( $xx && !empty($shop_nid) && is_numeric($shop_nid)) || (!empty($node->related_shop) && $node->related_shop != 0)) {
     $form['related_shop'] = array(
       '#type' => 'hidden',
       '#value' => isset($node->related_shop)? $node->related_shop : $shop_nid
     );
     $album_business = 1;
  }
  $form['album_business'] = array(
    '#type' => 'radios',
    '#options' => array(
      0 => t('Personal album'),
      1 => t('Business album'),

    ),
    '#default_value' => $album_business,
  );
  if (user_access('administer nodes')) {
    $form['featured_album'] = array (
      '#type'      => 'checkbox',
      '#title'     => t('Select if featured album'),
      '#default_value' => $node->featured_album,
      '#description' => t('Check this box if this album is featured album'),
    );
  }
  return $form;
}

/**
 *  Implementation of hook_insert()
 */
function yebab_albums_insert($node) { 
  $related_shop = $node->related_shop;
  if ($node->album_business == 1 && empty($related_shop)) {
    $related_shop = db_result(db_query("SELECT store_nid FROM {yebab_users_info} WHERE uid = %d", $node->uid));
  }
  db_query("INSERT INTO {yebab_useralbum_info} (nid, album_status, featured_album, related_shop) VALUES (%d, %d, %d, %d)", $node->nid, $node->album_status, $node->featured_album, $related_shop);
  $shop_type = db_fetch_object(db_query("SELECT shop_type, vid FROM {shop_node} where nid = %d", $related_shop));
  if ($shop_type->shop_type == 2) {
    db_query ("UPDATE {node} SET status = 1 WHERE nid = %d", $related_shop);
    $s_tid = db_result(db_query("SELECT s_tid FROM {yebab_site_categories_relation} WHERE a_tid = %d", array_shift($node->taxonomy)));
    db_query ("INSERT INTO {term_node} (nid, vid, tid) VALUES (%d, %d, %d)", $related_shop, $shop_type-> vid, $s_tid);
  }
  $viewers = $node->boards_viewers;
  if (!empty($viewers)) {  
    foreach($viewers as $viewer) {
      if ($viewer != 0) {
        db_query("INSERT INTO {yebab_pineterest_board_viewers} (bid, uid) VALUES (%d, %d)", $node->nid, $viewer);
      }
    }
  }
}

/**
 * Implementation of hook_node_update()
 */
function yebab_albums_update($node) {
 $related_shop = $node->related_shop;
  if ($node->album_business == 1 && empty($related_shop)) {
    $related_shop = db_result(db_query("SELECT store_nid FROM {yebab_users_info} WHERE uid = %d", $node->uid));
  }
  db_query("UPDATE {yebab_useralbum_info} SET album_status = %d, featured_album = %d, related_shop = %d WHERE nid = %d", $node->album_status, $node->featured_album, $related_shop, $node->nid);
  $viewers = $node->boards_viewers;

  if ($node->album_status == 0) {
    db_query("DELETE FROM {yebab_pineterest_board_viewers} WHERE bid = %d", $node->nid);
  }
  if (!empty($viewers)) {  
    db_query("DELETE FROM {yebab_pineterest_board_viewers} WHERE bid = %d", $node->nid);
    foreach($viewers as $viewer) {
      if ($viewer != 0) {
        db_query("INSERT INTO {yebab_pineterest_board_viewers} (bid, uid) VALUES (%d, %d)", $node->nid, $viewer);
      }
    }
  }
}

/**
 * Implementation of hook_node_load()
 */
function yebab_albums_load($node) {
  $add = array();
  $additions = db_fetch_object(db_query('SELECT album_status, featured_album, related_shop FROM {yebab_useralbum_info} WHERE nid = %d', $node->nid));
  if ($additions-> album_status == 1) {
    $viewers = db_query("SELECT uid FROM {yebab_pineterest_board_viewers} WHERE bid = %d", $node->nid);
    while($viewer = db_fetch_object($viewers)) {
      $add[] = $viewer->uid;
    }
  }
  $additions->boards_viewers = $add;
  return $additions;

}


/**
 * Implementation of hook_theme();
 */
function yebab_albums_theme($existing, $type, $theme, $path) {
  return array(
    'term_thumbnail' => array(
      'arguments' => array('term' => NULL),
    ),
    'albums_category_list' => array(
      'arguments' => array('cells' => NULL),
      'template' => 'yebab_albums_category_list',
    ),
    'albums_shop' => array(
      'arguments' => array('shop' => NULL),
      'template' => 'yebab_albums_shop',
    ),
    'albums_shop_list' => array(
      'arguments' => array('shops' => NULL),
      'template' => 'yebab_albums_shop_list',
    ),
    'albums_useralbum' => array(
      'arguments' => array('album' => NULL),
      'template' => 'yebab_albums_useralbum',
    ),
    'albums_useralbum_list' => array(
      'arguments' => array('albums' => NULL),
      'template' => 'yebab_albums_useralbum_list',
    ),
    'albums_privacy_page' => array(
      'arguments' => array('form' => NULL),
    ),
    // for mobile front page
    'albums_mobile_useralbum' => array(
      'arguments' => array('album' => NULL),
      'template' => 'yebab_albums_mobile_useralbum',
    ),
    
    'albums_mobile_category_list' => array(
      'arguments' => array('cells' => NULL),
      'template' => 'yebab_albums_mobile_category_list',
    ),
    
  );
}

//term thumbnail theme function 
function theme_term_thumbnail($term) {

  if (module_exists('taxonomy_image')) {
    $img = taxonomy_image_display($term->tid);
    if (strlen($img)) {
      return '<div class="album_term_thumb">'. l($img . '<br/>' .  i18ntaxonomy_translate_term_name($term->tid, $term->name), 'albums/shops/'. $term->tid, array('html' => TRUE)) .'</div>';
    }
  }

  //select random node with image , so we can grab an image and use it's thumbnail
  $iid = db_result(db_query("
    SELECT shi.inid FROM {node} n 
    INNER JOIN {yebab_shop_images} shi on n.nid = shi.snid 
    INNER JOIN {term_node} tn on shi.snid = tn.nid 
    INNER JOIN {term_hierarchy} th on th.tid = tn.tid and th.parent = %d 
    ORDER BY n.created DESC LIMIT 1", $term->tid
  ));

  if (!$iid) {
    //if no image for the term try to look deeper
    $shop_nodes_rs = taxonomy_select_nodes(array($term->tid), 'or', 'all', FALSE);
    
    $node_images = array();
    while ($shop_node = db_fetch_object($shop_nodes_rs)) {
      if ( yebab_albums_shop_has_images($shop_node) && yebab_shop_is_paid((int) $shop_node->nid) ) {
      if ($term->tid == 30) {
       // var_dump($shop_node);
      }
        $node_images[] = $shop_node;
      }
    }
    
    if (count($node_images)) {
      return '<div class="album_term_thumb">'. l(yebab_albums_get_shop_image($node_images[0]). '<br/>' . i18ntaxonomy_translate_term_name($term->tid, $term->name), 'albums/shops/'. $term->tid, array('html' => TRUE)) .'</div>';
    }
  }
  else {
    //there is iid .. use it
    return  '<div class="album_term_thumb">'. l(yebab_albums_term_image($iid) .'<br/>' . i18ntaxonomy_translate_term_name($term->tid, $term->name), 'albums/shops/'. $term->tid, array('html' => TRUE)).'</div>';
  }

  // use the default , nothing left to do ..
  return '<div class="album_term_thumb">'. l(theme('image', drupal_get_path('module', 'yebab_albums') .'/assets/default_thumb.png') .'<br/>'. i18ntaxonomy_translate_term_name($term->tid, $term->name), 'albums/shops/'. $term->tid, array('html' => TRUE)).'</div>'; 
}

//$node == image node
function yebab_albums_term_image($node, $preset = 'yebab_thumb') {

  if (is_numeric($node)) {
    $node = node_load($node);
  }

  $img = theme('imagecache', $preset, $node->images['preview'], $node->title, $node->title);

  if ($img) {
    return $img;
  }
  else {
      switch ($preset) {
        case 'yebab_thumb':
          return theme('image', $node->images['preview'], $node->title, $node->title, array('width' => 128, 'height'=> 128), FALSE);
          break;

        case 'yebab_preview':
          return theme('image', $node->images['preview'], $node->title, $node->title, array(), FALSE);
          break;

        case 'yebab_minithumb':
          return theme('image', $node->images['preview'], $node->title, $node->title, array('width' => 80, 'height'=> 80), FALSE);
          break;
      }
  }
}

/**
 *
 */
function yebab_albums_get_latest_images() {

  $sql = 'SELECT ui.nid, n.title, ui.oid FROM {node} n INNER JOIN {upload_images} ui USING (nid) INNER JOIN {yebab_useralbum_info} ua ON ua.nid = ui.oid WHERE ua.album_status = 0 ORDER BY n.created DESC, n.changed DESC LIMIT 15';

  $rs = db_query($sql);

  $images = array();
  while ($image = db_fetch_object($rs)) {
    $image = node_load($image->nid);
    $img = theme('imagecache', 'yebab_mini_thumb', $image->images['_original'], $image->title, $image->title);

    if ($img) {
      $images[] = '<div class="yebab_image_minithumb">'. l($img, 'node/'. $image->nid, array('html' => TRUE)) .'</div>';
    }else {
      $images[] = '<div class="yebab_image_minithumb">'. l(theme('image', $image->images['_original'], $image->title, $image->title, array('width' => '80', 'height' => '80'), FALSE) , 'node/'. $image->nid, array('html' => TRUE)) .'</div>';
    }
  }

  foreach ($images as $k => $cell) {
    if (($k + 1) % YEBAB_ALBUMS_HOME_COLUMNS_COUNT == 0 && $k > 0 ) {
      $images[$k] = $cell.'</tr><tr>';
    }
  }

  if (count($images)) {
    drupal_add_css(drupal_get_path('module', 'yebab_albums') .'/assets/albums.css');
    $output = '<table id="yebab-albums-list"><tr><td class="yebab-albums-cell">';
    $output .= implode('</td><td class="yebab-albums-cell">', $images);
    $output .= '</td></tr></table>';
    $output .= '<div id="qa_more_link"><a href="'. url('albums').'"><img src="'. base_path() . path_to_theme() . '/images/more-small-button.png" alt="" /></a></div>';
  }
  else {
    $output = t('No Images Yet');
  }
  return $output;
}

/**
 * Function to display albums at home page for unregistered users
 */
function yebab_albums_unregistered_get_latest_albums() {

 global $language;

 drupal_add_css(drupal_get_path('module', 'yebab_albums') .'/assets/albums.css');
 
 $output = ''; 
 $sql = 'SELECT DISTINCT(n.nid) FROM {node} n INNER JOIN {yebab_useralbum_info} ua ON ua.nid = n.nid WHERE n.status = 1 AND n.type = "'. YEBAB_ALBUMS_USERALBUM_TYPE .'" AND ua.album_status = 0 AND n.language = "' . $language->language . '" ORDER BY n.sticky DESC, n.created DESC LIMIT 10';

  $nodes = db_query($sql);
  $count = 1;
  $cells = array();
  while ($album = db_fetch_object($nodes)) {
    $album = node_load($album->nid);
    if ($album->type == YEBAB_ALBUMS_USERALBUM_TYPE && count($album->files) && $count < 4) {
      $cells[] = theme('albums_useralbum', $album);
      $count ++;
    }    
  }

  if (count($cells)) {
    $output .= theme('albums_category_list', $cells);
    if ($language->language == 'ar') { 
      $output .= "<div id='more-link-albums-front'>" . l(theme('image', drupal_get_path('theme', 'yebab_theme').'/images/more-small-button.png'), 'albums/user/all', array('html' => TRUE)) . "</div>";
    }
    else {
      $output .= "<div id='more-link-albums-front'>" . l(theme('image', drupal_get_path('theme', 'yebab_theme').'/images/more-small-button-en.png'), 'albums/user/all', array('html' => TRUE)) . "</div>";      
    }
      
  }
  else {
    $output .= t('No Albums');
  }
  return $output;
}

/**
 *
 */
function yebab_albums_get_shop_image($shop, $preset = 'yebab_thumb') {
  $snid = $shop->nid;

  if (is_numeric($shop)) {
    $snid = $shop;
  }

  $images = yebab_albums_get_shop_images($shop);

  if (count($images)) {
    shuffle($images);
    $img = theme('imagecache', $preset, $images[0]->images['preview'], $images[0]->title, $images[0]->title);
    if ($img) {
      return $img;
    }
    else {
      switch ($preset) {
        case 'yebab_thumb':
          return theme('image', $images[0]->images['preview'], $images[0]->title, $images[0]->title, array('width' => 128, 'height'=> 128), FALSE);
          break;

        case 'yebab_preview':
          return theme('image', $images[0]->images['preview'], $images[0]->title, $images[0]->title, array(), FALSE);
          break;

        case 'yebab_minithumb':
          return theme('image', $images[0]->images['preview'], $images[0]->title, $images[0]->title, array('width' => 80, 'height'=> 80), FALSE);
          break;

      }
    }
  }
}

/**
 *
 */
function yebab_albums_get_shop_images($shop) {
  $query = db_query("SELECT * FROM {yebab_shop_images} WHERE snid = %d", $shop->nid);

  $images = array();
  while ($shop_image = db_fetch_object($query)) {
    $images[$shop->nid] = node_load($shop_image->inid);
  }

  return $images;
}

/**
 *
 */
function yebab_albums_shop_has_images($node) {

  $nid = $node->nid;
  
  if (is_numeric($node)) {
    $nid = $node;
  }
  
  $bool = db_result(db_query("SELECT COUNT(1) FROM {yebab_shop_images} WHERE snid = %d", $nid));
  if ($bool > 0) {
    return TRUE;
  }

  return FALSE;
}

/** 
 * Implementation of hook_nodeapi()
 */
function yebab_albums_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  global $language;
  global $user;
  if ($node->type == 'yebab_user_album') {
    switch ($op) {
      case 'view': 
        if ($node->tnid != $node->nid && $node->tnid != 0) {
     
          unset($node->content);
          $trans = node_load ($node->tnid);
          $trans->title = '';
          $other_node = node_view($trans);
          $node->content['albums_translation'] = array (
           '#value' => $other_node,
           '#weight' => 20,
          );
          }
      break; 
      case 'insert':
      case 'update':

        if (module_exists('yebab_pinterest') && arg(0) != 'admin' && 
        (arg(0) != 'node' && (arg(1) != 'image' || arg(1) != 'yebab-shop')) &&
        (arg(0) != 'user' && arg(1) != 'register') &&
        (arg(0) != 'yebab_api') &&
        (arg(0) != 'twitter') &&
        (arg(0) != 'fboauth') &&
        (arg(0) != 'albums') && arg(1) != 'node' && arg(2) != 'pin' && arg(4) != 'repin') {
          
           drupal_goto('albums/boards/' . $node->nid);
        }      
        cache_clear_all('yebab_olive_homepage_featured_albums_cache_id', 'cache');
        cache_clear_all('yebab_olive_recent_albums_rightblock_cache_id', 'cache');        
    
      break;
      case 'delete':
        cache_clear_all('yebab_olive_homepage_featured_albums_cache_id', 'cache');
        cache_clear_all('yebab_olive_recent_albums_rightblock_cache_id', 'cache');        
        break;
    }  
  }
 
  if ($node->type == YEBAB_ALBUMS_SHOP_TYPE) {
    switch ($op) {
      case 'presave':
         if ($node->shop_type != 2) {
          $object = array();
          foreach (array_keys((array) $node) as $key) {
            if (!is_object($node->$key)) { 
              $object[$key] = $node->$key;
            }
          }
          preg_match_all("/\/imagebrowser\/view\/(\w+)\/(\d+)\/(\w+)/i", implode('', $object), $matches);
          if (count($matches)) {
            db_query("DELETE FROM {yebab_shop_images} WHERE snid = %d", $node->nid);
            foreach (array_unique($matches[2]) as $iid) {
              $record = new stdClass();
              $record->snid = $node->nid;
              $record->inid = $iid;
              drupal_write_record('yebab_shop_images', $record);
              //drupal_set_message('images : ' . $iid);
            }
          }
          else {
            db_query("DELETE FROM {yebab_shop_images} WHERE snid = %d", $node->nid);
          }
       }
        break;

      case 'insert':
      
          //ugly hack to fix the insert of 0 on new (not id-ed yet) nodes
          db_query("UPDATE {yebab_shop_images} SET snid = %d WHERE snid = 0", $node->nid);

        break;

      case 'load':
        $shop_images = array();

        //check if this node has images 
        $bool = db_result(db_query("SELECT COUNT(1) FROM {yebab_shop_images} WHERE snid = %d", $node->nid));
        if ($bool) {
          $query = db_query("SELECT inid FROM {yebab_shop_images} WHERE snid = %d", $node->nid);
          while ($img = db_fetch_object($query)) {
            $shop_images[$img->inid] = node_load($img->inid);
            if ($node->status == 0 && $shop_images[$img->inid]-> status != 0) {
              db_query("UPDATE {node} SET status = 0 WHERE nid = %d", $img->inid); 
            }
            if ($node->status == 1 && $shop_images[$img->inid]-> status != 1) {
              db_query("UPDATE {node} SET status = 1 WHERE nid = %d", $img->inid); 
            }
          }
        }
//        return array('yebab_images' => $shop_images);
        break;
      case 'delete':
       db_query("DELETE FROM {yebab_shop_images} WHERE snid = %d", $node->nid);
       break;
     
    }
  }
 
  if ($node->type == 'image' && !module_exists('yebab_pinterest')) {
    switch ($op) {
      case 'view':
        global $theme;
        $breadcrumb = array();
        $breadcrumb[] = l(t('Home'), '<front>');
        $breadcrumb[] = l(t('Yebab Albums'), 'albums');

        $album_user = db_result(db_query("SELECT oid FROM {upload_images} WHERE nid = %d LIMIT 1", $node->nid));
        $album_shop = db_result(db_query("SELECT snid FROM {yebab_shop_images} WHERE inid = %d LIMIT 1", $node->nid));

        if ($album_user) {
          
          $breadcrumb[] = l(t('Yebab User Albums'), 'albums/user');
          $album = node_load($album_user);
          drupal_set_title ($album->title);
          
          $album_images = explode(',', db_result(db_query("SELECT GROUP_CONCAT(ui.nid) FROM {upload_images} ui inner join {node} n using (nid) WHERE ui.oid = %d GROUP BY oid", $album_user)));

          if (count($album_images)) {
            $images = $album_images;
            $images_values = array_flip($images);
            $link_prev = $images_values[$node->nid] - 1;
            $link_next = $images_values[$node->nid] + 1;
          }
          
          
          $img = theme('imagecache', 'yebab_preview', $node->images['_original'], $album->title, $album->title);

        if ($img) {
          $node->content['image']['#value'] = "<div id='yebab_olive_main_album_image'>" . 
          (isset($images[$link_prev])? l(theme_image(drupal_get_path('theme', 'yebab_olive') . '/images/next.gif'), 'node/'.$images[$link_prev], array('html'=>true, 'attributes'=> array('class'=> 'yebab_olive_next_album'))) : '') . 
          $img . 
           (isset($images[$link_next])? l(theme_image(drupal_get_path('theme', 'yebab_olive') . '/images/prev.gif'), 'node/'. $images[$link_next], array('html'=>true, 'attributes'=> array('class'=> 'yebab_olive_prev_album'))) : '')
          
          . "</div>";
        
        }
        else {
          $node->content['image']['#value'] = 
          (isset($images[$link_prev]) ?
          l(theme_image(drupal_get_path('theme', 'yebab_olive') . '/images/next.gif'), 'node/'. $images[$link_prev], array('html'=>true))
          : '')
            .  theme('image', $node->images['_original'], $album->title, $album->title).
            
           (isset($images[$link_next]) ?  l(theme_image(drupal_get_path('theme', 'yebab_olive') . '/images/prev.gif'), 'node/'. $images[$link_next], array('html'=>true)) : '');
        }

        $node->content['image']['#weight'] = 0;

          //remove text
          unset($node->content['body']);
          if ($language->language == 'ar') {
          $navigation_rows = array(
            array('صورة '. ($images_values[$node->nid] + 1) .' من '. count($images),
              l(t('Back to Album'), 'node/'. $album_user),
              (isset($images[$link_prev]) ? l('الصورة السابقة', 'node/'. $images[$link_prev] ) : '') .'&nbsp;'.
              (isset($images[$link_next]) ? l('الصورة التالية', 'node/'. $images[$link_next] ) : '')
            ),
          );
          
          $navigation_rows2 = array(
            array((isset($images[$link_prev]) ? l('الصورة السابقة', 'node/'. $images[$link_prev] ) : '') .'&nbsp;', '',
              (isset($images[$link_next]) ? l('الصورة التالية', 'node/'. $images[$link_next] ) : '')
            ),
          );
          
          } 
          else {
            $navigation_rows = array(
              array('image '. ($images_values[$node->nid] + 1) .' from '. count($images),
                l(t('Back to Album'), 'node/'. $album_user),
                (isset($images[$link_prev]) ? l('Previous image', 'node/'. $images[$link_prev] ) : '') .'&nbsp;'.
                (isset($images[$link_next]) ? l('Next image', 'node/'. $images[$link_next] ) : '')
              ),
            );
            $navigation_rows2 = array(
              array((isset($images[$link_prev]) ? l('Previous image', 'node/'. $images[$link_prev] ) : '') .'&nbsp;', '',
                (isset($images[$link_next]) ? l('Next image', 'node/'. $images[$link_next] ) : '')
              ),
            );  
          }
      
          if ($theme != 'yebab_mobile') {
            $node->content['shop_navigation'] = array(
              '#value' => theme('table', array(), $navigation_rows, array('class' => 'top_album_navigation_table')),
              '#weight' => -49,
            );
            $node->content['shop_navigation_below'] = array(
              '#value' => theme('table', array(), $navigation_rows2, array('class' => 'bottom_album_navigation_table')),
              '#weight' => 2,
            );
          }
          $shop_images = "";
          foreach (array_slice($album_images, 0, 50) as $image) {
            $simage = node_load($image);
            $img = theme('imagecache', 'yebab_mini_thumb', $simage->images['_original'], $album->title, $album->title);
            if ($img) {
             $shop_images .= l($img, 'node/'. $simage->nid, array('html' => TRUE)).'&nbsp;&nbsp;&nbsp;';
            }
            else {
             $shop_images .= l(theme('image', $simage->images['_original'], $album->title, $album->title, array('width' => 80, 'height' => 80), FALSE), 'node/'. $simage->nid, array('html' => TRUE)).'&nbsp;&nbsp;&nbsp;';
            }
          }

          if ($theme != 'yebab_mobile') {
            $node->content['album_images'] = array(
              '#value' => '<h3>صور الألبوم</h3><div class="shop_images_list">'. $shop_images .'</div>',
              '#weight' => 3,
            );
          }
          
          // For mobile theme
          if ($theme == 'yebab_mobile') {
            $output = '';
            $old = node_load($images[$link_prev]);
            $old_image = $old->images['thumbnail'];
            
            $new =  node_load($images[$link_next]);
            $new_image = $new->images['thumbnail'];
            
            $output .= "<div id='old-mobile-topic'>السابق<br />";
            $output .= l(theme('image', $old_image), 'node/' . $images[$link_prev], array('html' => TRUE)) . '<br />';
            if (strlen($old->title) > 15) {
              $output .= l(drupal_substr($old->title,0,15) . '...', 'node/' . $images[$link_prev]) . '<br />';      
            }
            else {
              $output .= l($old->title, 'node/' . $images[$link_prev]) . '<br />';      
            }
            $output .= "</div>";
      
            // Dsiplay New image and title
            $output .= "<div id='new-mobile-topic'>التالى <br />";
            $output .= l(theme('image', $new_image), 'node/' . $images[$link_next], array('html' => TRUE)) . '<br />';
            if (strlen($new->title) > 15) {
              $title = drupal_substr($new->title,0,15) . '...';
              $output .= l($title, 'node/' . $images[$link_next]) . '<br />';      
            }
            else {
              $output .= l($new->title, 'node/' . $images[$link_next]) . '<br />';      
            }
            $output .= "</div>";
           
            $node->content['nxt-prev'] = array (
              '#value' => "<div id='outer-nxt-prev'><div id='nxt-prev-mobile-topic'>" . $output . "</div></div>",
              '#weight' => 1200,
            );
          }
        }

        /// ALBUM SHOP
        if ($album_shop) {
          $breadcrumb[] = l(t('Yebab Shop Albums'), 'albums/shops');
          $shop = node_load($album_shop);
          drupal_set_title ($shop->title);
          $img = theme('imagecache', 'yebab_preview', _yebab_shop_get_thumb_path($node->images['_original'], 600), $shop->title, $shop->title);

        if ($img) {
          $node->content['image']['#value'] = $img;
        }
        else {
          $node->content['image']['#value'] = theme('image', _yebab_shop_get_thumb_path($node->images['_original'], 600), $shop->title, $shop->title);
        }

        $node->content['image']['#weight'] = 0;
     
         $rows = array(
            'name' => array(t('Shop Name'), l($shop->title, 'node/' . $shop->nid)),
            'phone' => array(t('Phone'), $shop->phone),
            'email' => array(t('Email'), $shop->email),
          );

          $node->content['shop_info'] = array(
            '#value' => theme('table', array(), $rows, array('class' => 'shop_album_navigation_table')),
            '#weight' => -50,
          );
          
          $images = array_keys($shop->yebab_images);
          $images_values = array_flip($images);

          $link_prev = $images_values[$node->nid] - 1;
          $link_next = $images_values[$node->nid] + 1;
          
          // For mobile theme
          if ($theme == 'yebab_mobile') {
            $output = '';
            $old = node_load($images[$link_prev]);
            $old_image = $old->images['thumbnail'];
            
            $new =  node_load($images[$link_next]);
            $new_image = $new->images['thumbnail'];
            
            $output .= "<div id='old-mobile-topic'>السابق<br />";
            $output .= l(theme('image', $old_image), 'node/' . $images[$link_prev], array('html' => TRUE)) . '<br />';
            if (strlen($old->title) > 15) {
              $output .= l(drupal_substr($old->title,0,15) . '...', 'node/' . $images[$link_prev]) . '<br />';      
            }
            else {
              $output .= l($old->title, 'node/' . $images[$link_prev]) . '<br />';      
            }
            $output .= "</div>";
      
            // Dsiplay New image and title
            $output .= "<div id='new-mobile-topic'>التالى <br />";
            $output .= l(theme('image', $new_image), 'node/' . $images[$link_next], array('html' => TRUE)) . '<br />';
            if (strlen($new->title) > 15) {
              $title = drupal_substr($new->title,0,15) . '...';
              $output .= l($title, 'node/' . $images[$link_next]) . '<br />';      
            }
            else {
              $output .= l($new->title, 'node/' . $images[$link_next]) . '<br />';      
            }
            $output .= "</div>";
           
            $node->content['nxt-prev'] = array (
              '#value' => "<div id='outer-nxt-prev'><div id='nxt-prev-mobile-topic'>" . $output . "</div></div>",
              '#weight' => 1200,
            );
          }
          //For the default theme
          ////////////////////
          else {
          
          if ($language-> language == 'ar') {
          $navigation_rows = array(
            array('صورة '. ($images_values[$node->nid] + 1) .' من '. count($images),
              l(t('Back to shop page'), 'node/'. $shop->nid),
              (isset($images[$link_prev]) ? l('الصورة السابقة', 'node/'. $images[$link_prev] ) : '') .'&nbsp;'.
              (isset($images[$link_next]) ? l('الصورة التالية', 'node/'. $images[$link_next] ) : '')
            ),
          );
          $navigation_rows2 = array(
            array((isset($images[$link_prev]) ? l('الصورة السابقة', 'node/'. $images[$link_prev] ) : '') .'&nbsp;', '',
              (isset($images[$link_next]) ? l('الصورة التالية', 'node/'. $images[$link_next] ) : '')
            ),
          );
          
          }
          else {
          
            $navigation_rows = array(
              array('Image '. ($images_values[$node->nid] + 1) .' from '. count($images),
                l(t('Back to shop page'), 'node/'. $shop->nid),
                (isset($images[$link_prev]) ? l('Previous image', 'node/'. $images[$link_prev] ) : '') .'&nbsp;'.
                (isset($images[$link_next]) ? l('Next image', 'node/'. $images[$link_next] ) : '')
              ),
            );
 
            $navigation_rows2 = array(
              array((isset($images[$link_prev]) ? l('Previous image', 'node/'. $images[$link_prev] ) : '') .'&nbsp;', '',
                (isset($images[$link_next]) ? l('Next image', 'node/'. $images[$link_next] ) : '')
              ),
            );
          }
          $node->content['shop_navigation'] = array(
            '#value' => theme('table', array(), $navigation_rows, array('class' => 'top_album_navigation_table')),
            '#weight' => -49,
          );

          $node->content['shop_navigation_below'] = array(
            '#value' => theme('table', array(), $navigation_rows2, array('class' => 'top_album_navigation_table')),
            '#weight' => 2,
          );

          $shop_images = "";
          foreach (array_slice($shop->yebab_images, 0, 50) as $simage) {
            $img = theme('imagecache', 'yebab_mini_thumb', $simage->images['_original'], $simage->title, $simage->title);

            if ($img) {
              $shop_images .= l($img, 'node/'. $simage->nid, array('html' => TRUE)).'&nbsp;&nbsp;&nbsp;';
            }
            else {
              $shop_images .= l(theme('image', $simage->images['_original'], $simage->title, $simage->title, array('width' => 80, 'height' => 80), FALSE), 'node/'. $simage->nid, array('html' => TRUE)).'&nbsp;&nbsp;&nbsp;';
            }
          }

          $node->content['album_images'] = array(
            '#value' => '<h3>صور الألبوم</h3><div class="shop_images_list">'. $shop_images .'</div>',
            '#weight' => 3,
          );
        }
      }
      drupal_set_breadcrumb($breadcrumb);
      break;
    }
  }
}

/**
 *
 */
function yebab_albums_settings_page(&$form_state) {
  $form = array();
  $vocabs = taxonomy_get_vocabularies(YEBAB_ALBUMS_SHOP_TYPE);
  $options = array();
  foreach ($vocabs as $id => $vocab) {
    $options[$id] = $vocab->name;
  }
  $form[YEBAB_ALBUMS_SHOP_VID] = array(
    '#type' => 'select',
    '#title' => t('Albums Category'),
    '#options' => $options,
    '#default_options' => variable_get(YEBAB_ALBUMS_SHOP_VID, 0),
    '#description' => t('Select the vocabulary to use yebab albums'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_imagecache_default_presets().
 */
function yebab_albums_imagecache_default_presets() {
  $presets = array();

  $presets['yebab_thumb'] = array (
    'presetname' => 'yebab_thumb',
    'actions' =>
    array (
      0 =>
      array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' =>
        array (
          'width' => '128',
          'height' => '128',
        ),
      ),
    ),
  );
  $presets['yebab_mini_thumb'] = array (
    'presetname' => 'yebab_mini_thumb',
    'actions' =>
    array (
      0 =>
      array (
        'weight' => '0',
        'module' => 'imagecache',
        'action' => 'imagecache_scale_and_crop',
        'data' =>
        array (
          'width' => '80',
          'height' => '80',
        ),
      ),
    ),
  );
  $presets['yebab_preview'] = array (
    'presetname' => 'yebab_preview',
    'actions' => array (
      0 => array(
        'weight' => '1',
        'module' => 'imagecache_canvasactions',
        'action' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'right',
          'ypos' => '10',
          'alpha' => '100',
          'path' => 'logo.png',
        )
      ),
    ),
  );
  return $presets;
}

/**
 * Implementation of hook_form_alter
 */
function yebab_albums_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['#node'];
  if ($form_id == 'yebab_user_album_node_form' && arg(2) != 'edit') {
    unset($form['buttons']['preview']);
    unset($form['attachments']);
    $form['buttons']['submit']['#value'] = t('Create album');
  }
  if ($form_id == 'image_node_form') {
    unset($form['buttons']['preview']);
    $form['body_field']['body']['#cols'] = 5;
    $form['body_field']['body']['#rows'] = 2;
    $form['buttons']['submit']['#prefix'] = "<div class='stick_it_button'>";
    $form['buttons']['submit']['#suffix'] = "</div>";
    $form['image']['image']['#size'] = 25;
    $form['buttons']['submit']['#value'] = t('Stick it');
    $form['attachments']['#collapsed'] = False;
  }
}

/************************** Olive theme *******************************/
/**
 * Function to display the 6 big thumbs for the albums at the homepage ( featured albums )
 */
function yebab_albums_olive_home_featured_albums() {
  
  global $language;
  $output = array(); 
  $cache = cache_get('yebab_olive_homepage_featured_albums_cache_id');

  if ($cache && !empty($cache->data)) {
    $out = $cache->data;
  }
  else {
    $count = 1;
    $dates = array();
  /*
    $sql = 'SELECT DISTINCT(n.nid), created FROM {node} n INNER JOIN {yebab_useralbum_info} ua ON ua.nid = n.nid WHERE n.status = 1 AND n.type = "'. YEBAB_ALBUMS_USERALBUM_TYPE .'" AND ua.album_status = 0 AND featured_album = 1 AND n.language = "' . $language->language . '" ORDER BY  n.created DESC, n.sticky DESC LIMIT 2';
    $nodes = db_query($sql);
    while ($album = db_fetch_object($nodes)) {
      $dates[$album->nid][] = $album->created;  
    }
  */
    $shop_query = db_query("SELECT nid, featured_date FROM {node} INNER JOIN {shop_node} USING (nid) WHERE featured = 1 AND shop_type = 0 AND status = 1 AND language = 'ar' ORDER BY featured_date DESC LIMIT 4");
    while ($shop = db_fetch_object($shop_query)) {
      $dates[$shop->nid][] = $shop->featured_date;
    }
    $blog_query = db_query("SELECT nid, created FROM {node} n INNER JOIN {blog_type} t USING (nid) WHERE featured_article = 1 AND t.type = 0 AND status = 1 ORDER BY n.created DESC LIMIT 2");
    while ($blog = db_fetch_object($blog_query)) {
      $dates[$blog->nid][] = $blog->created;
    }
    // Sort featured according to dates descending
    arsort($dates);

    foreach ($dates as $key=>$value) {
  
      if ($count == 1) {
        $width = 300;    
        $height = 420;
      }
   
      if ($count == 2 ||$count == 3 || $count == 6) {
        $width = 285;
        $height = 200;
      }   
      if ($count == 4  || $count == 5) {
        $width = 600;
        $height = 200;
      }
      $node = node_load($key);
      /**
      if ($node->type == 'yebab_user_album') {
        if ($node->type == YEBAB_ALBUMS_USERALBUM_TYPE && count($node->files)) {
          $output[$count] = yebab_albums_olive_featured_returned_albums($node, $width, $height); 
        }   
      }
      */
      if ($node->type == 'yebab_shop' || $node->type == 'yebab_blog') {
        $output[$count] = yebab_albums_olive_featured_shops($node, $width, $height);
      }
      $count ++;
    }
    $out = "<div id='yebab_featured_albums_block_body'>";
    if (count($output)) {
      foreach ($output as $key=> $value) {
        $out .= "<div id='featured_album_image_" . $key . "'>" . $value . "</div>";
      }
    } 
    else {
      $out .= t('No Albums');
    }   
    $out .= "</div>";
    cache_set('yebab_olive_homepage_featured_albums_cache_id', $out);
  }
  return $out;
}

/**
 *
 */
function yebab_albums_olive_featured_shops($node, $width, $height) {

 // $body = preg_match('/<img .*src=["|\']([^"|\']+)/i', $node->body, $image);
   preg_match_all('/<img[^>]+>/i', $node->body, $result); 

   preg_match('/src="([^"]*)"/', $result[0][0], $matches);

   if ( strpos($matches[1], 'imagebrowser/view/imagecache') === false) {
     $first_img = $matches[1];
   }
   else {
     $imagebrowse = (explode('/', $matches[1]));
       if (is_numeric($imagebrowse[4])) {
         $browse_node = node_load($imagebrowse[4]);
         $first_img = $browse_node->images['_original'];
        }
     }
  
 // $first_img = str_replace(base_path(), '', $image[1]);

  if (strlen($node->title) >= 40 && $width == 285) {
    $title = drupal_substr($node->title, 0, 38) . ' ...';
  }
  elseif (strlen($node->title) >= 50 && $width == 300) {
    $title = drupal_substr($node->title, 0, 50) . ' ...';
  }
  elseif (strlen($node->title) >= 300 && $width == 600) {
    $title = drupal_substr($node->title, 0, 500) . ' ...';
  }
  else {
     $title = $node->title;
  }
  $output = '<div class="album_thumb">';
  $first_img = ltrim($first_img, '/');
  $destination = _image_filename($first_img, 'image_' . $width . $height);
  if ($destination) {
   $file_info = image_get_info($destination);
   if($file_info['width'] != $width) {
     image_scale_and_crop($first_img, $destination, $width, $height);
   }
  }
  else {
    $destination = $first_img;
  }
  $img = theme('image', $destination, $title, $title);
   if ($img) {
     $output .= l( $img.'<br/><span>'. $title . '</span>', 'node/'. $node->nid, array('html' => TRUE));
    }
  else { 
    $output .= l(theme('image', drupal_get_path('module', 'yebab_albums') .'/assets/default_thumb.png', '', '', array('width' => $width, 'height' => $height)) . $title, 'node/'. $node->nid, array('html' => TRUE));
  }
  $output .= '</div>';
  return $output;
}

/**
 * Function to display albums at home page for Olive theme
 */
function yebab_albums_olive_home_get_latest_albums() {

 global $language;

 $output = array(); 
 $sql = 'SELECT DISTINCT(n.nid) FROM {node} n INNER JOIN {yebab_useralbum_info} ua ON ua.nid = n.nid WHERE n.status = 1 AND n.type = "'. YEBAB_ALBUMS_USERALBUM_TYPE .'" AND ua.album_status = 0 AND n.language = "' . $language->language . '" ORDER BY n.sticky DESC, n.created DESC LIMIT 10';

  $nodes = db_query($sql);

  while ($album = db_fetch_object($nodes)) {
    $album = node_load($album->nid);
    if ($album->type == YEBAB_ALBUMS_USERALBUM_TYPE && count($album->files)) {
     // $output[] = theme('albums_useralbum', $album);
      $output[] = yebab_albums_olive_image_returned($album);
    }    
  }

  if (count($output)) {
    $output = theme_item_list($output, '', 'ul',array('id'=> 'mycarousel', 'class' => 'jcarousel-skin-tango')); 
  }
  else {
    $output[] = t('No Albums');
  }
  return $output;
}

/**
 *
 */
function yebab_albums_olive_image_returned ($album, $width = '150', $height = '120') {
  if (strlen($album->title) >= 50) {
    $title = drupal_substr($album->title, 0, 47) . ' ...';
  }
  else {
     $title = $album->title;
  }
  $output = '<div class="album_thumb">';
  $images = upload_image_load($album);
  if ($images) {
    $image = array_shift($images);
    $result = db_fetch_object(db_query("SELECT *,i.image_size, f.filepath FROM {image} i INNER JOIN {files} f ON i.fid = f.fid WHERE i.nid = %d AND  i.image_size = '_original'", $image->nid));
    $img = theme('image', _yebab_shop_get_thumb_path($result->filepath, $width), $title, $title);
    if ($img) {
     $output .= l( $img.'<br/><span>'. $title . '</span>', 'http://yebab.com/albums', array('html' => TRUE));
    }
    else {
     $output .= l( theme('image', $result->filepath, $title, $title, array('width' => $width, 'height' => $height), FALSE).'<br/><span>'. $title . '</span>', 'http://yebab.com/albums', array('html' => TRUE));   
    } 
   }  else { 
         $output .= l(theme('image', drupal_get_path('module', 'yebab_albums') .'/assets/default_thumb.png') . $title, 'http://yebab.com/albums', array('html' => TRUE));
     }
  $output .= '</div>';
  return $output; 
}

